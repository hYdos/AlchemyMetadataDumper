         w __gthr_impl_key_create
02000000 T __init
02000024 000000a4 W abort
020000d8 00000024 T std::terminate()
020000fc 00000024 T std::unexpected()
02000120 00000034 W __gnu_cxx::__throw_concurrence_lock_error()
02000154 00000034 W __gnu_cxx::__throw_concurrence_unlock_error()
02000188 00000034 T std::__throw_bad_alloc()
020001bc 00000034 T std::__throw_bad_array_new_length()
020001f0 00000058 T std::__throw_logic_error(char const*)
02000248 00000058 T std::__throw_length_error(char const*)
020002a0 00000058 T __cxa_call_terminate
020002f8 0000005c t _GLOBAL__sub_D__ZN9__gnu_cxx9__freeresEv
02000354 00000048 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0200039c 0000021c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
020005b8 00000050 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
02000608 t __do_global_dtors_aux
020006d4 t frame_dummy
020006f8 00000030 T on_init_wut_malloc()
02000728 00000030 T on_fini_wut_malloc()
02000758 00000040 T on_init_wut_sockets()
02000798 00000040 T on_fini_wut_sockets()
020007d8 00000030 T on_init_wut_newlib()
02000808 00000030 T on_fini_wut_newlib()
02000838 00000030 T on_init_wut_stdcpp()
02000868 00000030 T on_fini_wut_stdcpp()
02000898 0000006c T __init_wrapper()
02000904 00000030 T __fini_wrapper()
02000934 00000064 T wups_init_config_functions(wups_loader_init_config_args_t)
02000998 00000030 T on_init_wut_devoptab()
020009c8 00000030 T on_fini_wut_devoptab()
020009f8 00000060 T init_storage(wups_loader_init_storage_args_t_)
02000a58 000001ec T getAlchemyGameRpx()
02000c44 00000054 T fixGhidraAddress(OSDynLoad_NotifyData*, void*)
02000c98 00000050 T dump()
02000ce8 00000044 T init_plugin()
02000d2c 00000020 T deinit_plugin()
02000d4c 00000034 T on_app_starting()
02000d80 00000020 T on_app_ending()
02000da0 00000020 T on_app_requests_exit()
02000dc0 00000068 T CheckForButtonCombo(unsigned int, unsigned int)
02000e28 00000148 T my_VPADRead(VPADChan, VPADStatus*, unsigned int, VPADReadError*)
02000fb0 00000028 W std::is_constant_evaluated()
02000fd8 0000002c W operator new(unsigned int, void*)
02001004 00000050 W std::char_traits<char>::lt(char const&, char const&)
02001054 00000120 W std::char_traits<char>::compare(char const*, char const*, unsigned int)
02001174 00000064 W std::char_traits<char>::length(char const*)
020011d8 00000028 W std::__size_to_integer(unsigned int)
02001200 00000030 W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_Vector_impl::~_Vector_impl()
02001200 00000030 W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_Vector_impl::~_Vector_impl()
02001230 00000028 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > >::base() const
02001258 00000070 W bool __gnu_cxx::operator==<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > >(__gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > > const&, __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > > const&)
02001258 00000070 W _ZN9__gnu_cxxeqIP20OSDynLoad_NotifyDataSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_QrqXeqcldtfL0p_4baseEcldtfL0p0_4baseERSt14convertible_toIbEE
020012c8 0000002c W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > >::operator*() const
020012f4 00000088 W __gnu_cxx::char_traits<char>::length(char const*)
0200137c 0000002c W std::basic_string_view<char, std::char_traits<char> >::data() const
020013a8 0000002c W std::basic_string_view<char, std::char_traits<char> >::size() const
020013d4 0000007c W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::~_Vector_base()
020013d4 0000007c W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::~_Vector_base()
02001450 0000008c W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::~vector()
02001450 0000008c W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::~vector()
020014dc 000000cc W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::resize(unsigned int)
020015a8 0000004c W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::data()
020015f4 0000004c W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::begin()
02001640 00000050 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::end()
02001690 0000003c W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > >::operator++()
020016cc 00000058 W std::basic_string_view<char, std::char_traits<char> >::basic_string_view(char const*)
020016cc 00000058 W std::basic_string_view<char, std::char_traits<char> >::basic_string_view(char const*)
02001724 00000070 W std::basic_string_view<char, std::char_traits<char> >::ends_with(char const*) const
02001794 00000050 W __gnu_cxx::char_traits<char>::eq(char const&, char const&)
020017e4 0000004c W unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)
02001830 0000004c W unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
0200187c 000000a8 W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_deallocate(OSDynLoad_NotifyData*, unsigned int)
02001924 00000028 W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_get_Tp_allocator()
0200194c 00000048 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::size() const
02001994 00000050 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::max_size() const
020019e4 00000028 W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_get_Tp_allocator() const
02001a0c 00000068 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_S_max_size(std::allocator<OSDynLoad_NotifyData> const&)
02001a74 00000108 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_check_len(unsigned int, char const*) const
02001b7c 00000054 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_default_append(unsigned int)::_Guard::_Guard(OSDynLoad_NotifyData*, unsigned int, std::allocator<OSDynLoad_NotifyData>&)
02001b7c 00000054 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_default_append(unsigned int)::_Guard::_Guard(OSDynLoad_NotifyData*, unsigned int, std::allocator<OSDynLoad_NotifyData>&)
02001bd0 000000b0 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_default_append(unsigned int)::_Guard::~_Guard()
02001bd0 000000b0 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_default_append(unsigned int)::_Guard::~_Guard()
02001c80 00000240 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_default_append(unsigned int)
02001ec0 000000b4 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_erase_at_end(OSDynLoad_NotifyData*)
02001f74 0000002c W OSDynLoad_NotifyData* std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_data_ptr<OSDynLoad_NotifyData>(OSDynLoad_NotifyData*) const
02001fa0 00000038 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > >::__normal_iterator(OSDynLoad_NotifyData* const&)
02001fa0 00000038 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> > >::__normal_iterator(OSDynLoad_NotifyData* const&)
02001fd8 00000038 W std::basic_string_view<char, std::char_traits<char> >::end() const
02002010 000000d0 W std::basic_string_view<char, std::char_traits<char> >::ends_with(std::basic_string_view<char, std::char_traits<char> >) const
020020e0 00000060 W void std::_Destroy<OSDynLoad_NotifyData*>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*)
02002140 0000004c W OSDynLoad_NotifyData* std::__uninitialized_default_n_a<OSDynLoad_NotifyData*, unsigned int, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, unsigned int, std::allocator<OSDynLoad_NotifyData>&)
0200218c 00000164 W std::_Vector_base<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_M_allocate(unsigned int)
020022f0 00000058 W std::vector<OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >::_S_relocate(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, std::allocator<OSDynLoad_NotifyData>&)
02002348 00000070 W void std::_Destroy_aux<false>::__destroy<OSDynLoad_NotifyData*>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*)
020023b8 00000028 W void std::_Destroy_aux<true>::__destroy<OSDynLoad_NotifyData*>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*)
020023e0 0000007c W OSDynLoad_NotifyData* std::__uninitialized_default_n<OSDynLoad_NotifyData*, unsigned int>(OSDynLoad_NotifyData*, unsigned int)
0200245c 0000008c W OSDynLoad_NotifyData* std::__relocate_a<OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, std::allocator<OSDynLoad_NotifyData> >(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, std::allocator<OSDynLoad_NotifyData>&)
020024e8 0000004c W std::__new_allocator<OSDynLoad_NotifyData>::deallocate(OSDynLoad_NotifyData*, unsigned int)
02002534 00000028 W OSDynLoad_NotifyData* std::__addressof<OSDynLoad_NotifyData>(OSDynLoad_NotifyData&)
0200255c 0000003c W void std::_Destroy<OSDynLoad_NotifyData>(OSDynLoad_NotifyData*)
02002598 00000080 W OSDynLoad_NotifyData* std::__uninitialized_default_n_1<false>::__uninit_default_n<OSDynLoad_NotifyData*, unsigned int>(OSDynLoad_NotifyData*, unsigned int)
02002618 00000088 W OSDynLoad_NotifyData* std::__uninitialized_default_n_1<true>::__uninit_default_n<OSDynLoad_NotifyData*, unsigned int>(OSDynLoad_NotifyData*, unsigned int)
020026a0 00000028 W OSDynLoad_NotifyData* std::__niter_base<OSDynLoad_NotifyData*>(OSDynLoad_NotifyData*)
020026c8 00000038 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>::__normal_iterator(OSDynLoad_NotifyData* const&)
020026c8 00000038 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>::__normal_iterator(OSDynLoad_NotifyData* const&)
02002700 00000104 W std::enable_if<std::__is_bitwise_relocatable<OSDynLoad_NotifyData, void>::value, OSDynLoad_NotifyData*>::type std::__relocate_a_1<OSDynLoad_NotifyData, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, std::allocator<OSDynLoad_NotifyData>&)
02002804 00000024 W void std::destroy_at<OSDynLoad_NotifyData>(OSDynLoad_NotifyData*)
02002828 00000078 W void std::_Construct<OSDynLoad_NotifyData>(OSDynLoad_NotifyData*)
020028a0 00000080 W OSDynLoad_NotifyData* std::fill_n<OSDynLoad_NotifyData*, unsigned int, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, unsigned int, OSDynLoad_NotifyData const&)
02002920 000000a8 W std::__new_allocator<OSDynLoad_NotifyData>::allocate(unsigned int, void const*)
020029c8 000000c0 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void> std::__relocate_a_1<OSDynLoad_NotifyData*, __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>, std::allocator<OSDynLoad_NotifyData> >(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>, std::allocator<OSDynLoad_NotifyData>&)
02002a88 00000028 W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>::base() const
02002ab0 0000006c W decltype (::new ((void*)(0)) OSDynLoad_NotifyData()) std::construct_at<OSDynLoad_NotifyData>(OSDynLoad_NotifyData*)
02002b1c 00000094 W OSDynLoad_NotifyData* std::__fill_n_a<OSDynLoad_NotifyData*, unsigned int, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, unsigned int, OSDynLoad_NotifyData const&, std::random_access_iterator_tag)
02002bb0 0000003c W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>::operator++()
02002bec 0000002c W __gnu_cxx::__normal_iterator<OSDynLoad_NotifyData*, void>::operator*() const
02002c18 0000009c W void std::__relocate_object_a<OSDynLoad_NotifyData, OSDynLoad_NotifyData, std::allocator<OSDynLoad_NotifyData> >(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, std::allocator<OSDynLoad_NotifyData>&)
02002cb4 0000004c W void std::__fill_a<OSDynLoad_NotifyData*, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, OSDynLoad_NotifyData const&)
02002d00 00000028 W std::remove_reference<OSDynLoad_NotifyData&>::type&& std::move<OSDynLoad_NotifyData&>(OSDynLoad_NotifyData&)
02002d28 00000080 W __gnu_cxx::__enable_if<!std::__is_scalar<OSDynLoad_NotifyData>::__value, void>::__type std::__fill_a1<OSDynLoad_NotifyData*, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData*, OSDynLoad_NotifyData const&)
02002da8 00000028 W OSDynLoad_NotifyData&& std::forward<OSDynLoad_NotifyData>(std::remove_reference<OSDynLoad_NotifyData>::type&)
02002dd0 00000080 W decltype (::new ((void*)(0)) OSDynLoad_NotifyData((declval<OSDynLoad_NotifyData>)())) std::construct_at<OSDynLoad_NotifyData, OSDynLoad_NotifyData>(OSDynLoad_NotifyData*, OSDynLoad_NotifyData&&)
02002e50 0000007c T initLogging
02002ecc 00000090 T deinitLogging
02002f5c 000000d0 T WUPSConfigAPI_GetVersion
0200304c 000001f4 T WUPSConfigAPI_InitLibrary_Internal
02003260 0000000c T __wups_start
0200327c 00000070 W __init_wut_socket
020032fc 0000006c W __fini_wut_socket
02003368 00000004 T __getreent
0200336c 00000004 W wut_set_thread_specific
02003370 00000004 W wut_get_thread_specific
02003374 0000014c W __assert_func
020034d0 000000a4 T WUPSStorageAPI_InitInternal
02003574 000000cc t __wups_thread_cleanup(unsigned int*, void*)
02003660 00000128 T __wups_getreent()
020037c8 000000a8 T wups_set_thread_specific
02003890 000000c8 T wups_get_thread_specific
02003978 00000008 T __syscall_lock_init
02003980 00000004 T __syscall_lock_acquire
02003984 00000004 T __syscall_lock_release
02003988 00000008 T __syscall_lock_init_recursive
02003990 00000014 T __init_wut_newlib
020039a4 00000004 T __fini_wut_newlib
020039a8 00000060 T __fini_wut_sbrk_heap
02003a18 00000004 T __init_wut_malloc
02003a1c 00000004 T __fini_wut_malloc
02003a20 00000068 T _malloc_r
02003a88 00000018 T _free_r
02003aa0 000000d8 T _realloc_r
02003b88 00000094 T _calloc_r
02003c1c 0000006c T _memalign_r
02003c88 00000070 T WHBAddLogHandler
02003cf8 00000068 T WHBRemoveLogHandler
02003d60 000001bc T WHBLogPrintf
02003f1c 00000068 t cafeLogHandler
02003f94 0000000c T WHBLogCafeInit
02003fa0 0000000c T WHBLogCafeDeinit
02003fac 0000005c t moduleLogHandler
02004008 000000bc T WHBLogModuleInit
020040f4 0000000c T WHBLogModuleDeinit
02004100 0000004c t udpLogHandler
0200414c 000000c4 T WHBLogUdpInit
02004230 0000004c T WHBLogUdpDeinit
0200427c 00000008 T __gthr_impl_active
02004284 00000004 T __gthr_impl_once
02004288 00000030 T __gthr_impl_key_delete
020042b8 00000030 T __gthr_impl_getspecific
020042e8 00000030 T __gthr_impl_setspecific
02004318 00000004 T __gthr_impl_mutex_init_function
0200431c 00000004 T __gthr_impl_mutex_destroy
02004320 00000004 T __gthr_impl_mutex_lock
02004324 00000004 T __gthr_impl_mutex_unlock
02004328 00000004 T __init_wut_stdcpp
0200432c 00000004 T __fini_wut_stdcpp
02004330 0000006c T __wut_key_delete(__wut_key_t)
0200439c 00000074 T __wut_getspecific(__wut_key_t)
02004410 00000088 T __wut_setspecific(__wut_key_t, void const*)
02004498 00000004 T __wut_mutex_init_function(OSMutex*)
020044ac 00000024 T __wut_mutex_lock(OSMutex*)
020044e0 00000024 T __wut_mutex_unlock(OSMutex*)
02004514 00000008 T __wut_mutex_destroy(OSMutex*)
0200451c 000000ac T __wut_once(unsigned int volatile*, void (*)())
020045f8 000001d0 T __init_wut_devoptab
02004818 0000008c T __fini_wut_devoptab
020048c4 000000a0 T __wut_fsa_dirclose
02004994 000001ac T __wut_fsa_dirnext
02004b70 00000168 T __wut_fsa_diropen
02004d18 000000a0 T __wut_fsa_dirreset
02004de8 000000d4 T __wut_fsa_fstat
02004eec 0000009c T __wut_fsa_fsync
02004fb8 000000e0 T __wut_fsa_mkdir
020050a8 000004a4 T __wut_fsa_open
020055bc 000001b4 T __wut_fsa_read
020057a0 00000114 T __wut_fsa_rename
020058c4 000000c4 T __wut_fsa_rmdir
02005998 00000184 T __wut_fsa_seek
02005b5c 00000118 T __wut_fsa_stat
02005c84 00000168 T __wut_fsa_statvfs
02005dfc 000000c8 T __wut_fsa_ftruncate
02005f04 000000c4 T __wut_fsa_unlink
02005fd8 00000040 T __wut_fsa_hashstring
02006018 0000035c T __wut_fsa_fixpath
02006374 00000080 T __wut_fsa_translate_stat_mode
020063f4 00000144 T __wut_fsa_translate_stat
02006538 00000028 T __wut_fsa_translate_error
02006560 000001d4 T __wut_fsa_write
02006764 000000cc T __wut_lock_init
02006850 00000054 T __wut_lock_acquire
020068b4 00000054 T __wut_lock_release
02006918 000000a8 T sendto
020069d0 00000094 T setsockopt
02006a74 00000058 T shutdown
02006adc 000000d0 T socket
02006bbc 0000000c T __wut_socket_init_devoptab
02006bc8 0000000c T __wut_socket_fini_devoptab
02006bd4 0000008c T __wut_get_nsysnet_fd
02006c60 00000088 T __wut_get_nsysnet_result
02006cf8 00000010 T __wut_socket_open
02006d08 00000044 T __wut_socket_read
02006d5c 00000044 T __wut_socket_write
02006db0 00000120 T __wut_fsa_chdir
02006ee0 000000e0 T __wut_fsa_chmod
02006fd0 0000009c T __wut_fsa_close
0200709c 00000038 T __wut_socket_close
020070e4 00000004 T operator delete(void*)
020070e8 00000004 T operator delete(void*, unsigned int)
020070ec 000000a0 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
0200718c 0000013c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
020072c8 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
02007330 0000011c t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0200744c 00000138 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
02007584 00000830 T __gxx_personality_v0
02007db4 000000f8 T __cxa_call_unexpected
02007eac 00000020 T __cxxabiv1::__terminate(void (*)())
02007ecc 00000018 T __cxxabiv1::__unexpected(void (*)())
02007ee4 00000018 T std::get_terminate()
02007efc 00000018 T std::get_unexpected()
02007f14 0000008c t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
02007fa0 00000070 T __cxa_init_primary_exception
02008010 00000068 T __cxa_throw
02008078 0000008c T __cxa_rethrow
02008104 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
02008110 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0200811c 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0200811c 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0200812c 00000040 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0200816c 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0200816c 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0200817c 00000040 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
020081bc 00000080 T operator new(unsigned int)
0200823c 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0200823c 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0200824c 00000040 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0200828c 000001d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
02008460 000000b4 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
02008514 00000094 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
020085a8 00000004 T std::type_info::~type_info()
020085a8 00000004 T std::type_info::~type_info()
020085ac 00000008 T std::type_info::__is_pointer_p() const
020085ac 00000008 T std::type_info::__is_function_p() const
020085b4 0000000c T std::bad_alloc::what() const
020085c0 00000010 T std::bad_alloc::~bad_alloc()
020085c0 00000010 T std::bad_alloc::~bad_alloc()
020085d0 00000040 T std::bad_alloc::~bad_alloc()
02008610 0000000c T std::bad_array_new_length::what() const
0200861c 00000010 T std::bad_array_new_length::~bad_array_new_length()
0200861c 00000010 T std::bad_array_new_length::~bad_array_new_length()
0200862c 00000040 T std::bad_array_new_length::~bad_array_new_length()
0200866c 0000007c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
020086e8 00000018 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
02008700 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
02008700 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
02008710 00000040 T __cxxabiv1::__class_type_info::~__class_type_info()
02008750 00000094 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
020087e4 00000104 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
020088e8 00000138 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
02008a20 00000154 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
02008b74 00000104 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
02008c78 00000064 T __cxa_allocate_exception
02008cdc 00000030 T __cxa_free_exception
02008d0c 000000c8 T __cxa_begin_catch
02008dd4 000000c0 T __cxa_end_catch
02008e94 00000004 T std::exception::~exception()
02008e94 00000004 T std::exception::~exception()
02008e98 00000004 T std::bad_exception::~bad_exception()
02008e98 00000004 T std::bad_exception::~bad_exception()
02008e9c 0000000c T transaction clone for std::bad_exception::what() const
02008e9c 0000000c T std::bad_exception::what() const
02008ea8 00000008 T std::bad_exception::~bad_exception()
02008eb0 00000068 t eh_globals_dtor(void*)
02008f18 0000004c T __cxa_get_globals_fast
02008f64 000000bc T __cxa_get_globals
02009020 00000018 T std::get_new_handler()
02009038 00000008 T std::logic_error::what() const
02009038 00000008 T std::runtime_error::what() const
02009040 000000cc T std::logic_error::~logic_error()
02009040 000000cc T std::logic_error::~logic_error()
0200910c 000000cc T std::length_error::~length_error()
0200910c 000000cc T std::length_error::~length_error()
020091d8 000000c8 T std::logic_error::~logic_error()
020092a0 000000c8 T std::length_error::~length_error()
02009368 00000118 T std::logic_error::logic_error(char const*)
02009368 00000118 T std::logic_error::logic_error(char const*)
02009480 00000038 T std::length_error::length_error(char const*)
02009480 00000038 T std::length_error::length_error(char const*)
020094b8 000000c4 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0200957c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
02009580 000003e8 T __divdi3
02009968 000003b8 T __udivdi3
02009d20 0000001c T __gthread_active_p
02009d3c 0000001c T __gthread_once
02009d58 0000001c T __gthread_key_create
02009d74 00000044 T __gthread_key_delete
02009db8 00000044 T __gthread_getspecific
02009dfc 00000044 T __gthread_setspecific
02009e40 00000014 T __gthread_mutex_init_function
02009e54 0000001c T __gthread_mutex_destroy
02009e70 0000001c T __gthread_mutex_lock
02009e8c 0000001c T __gthread_mutex_unlock
02009ea8 000001d0 t init_dwarf_reg_size_table
0200a078 000001cc t uw_install_context_1
0200a244 0000018c t read_encoded_value
0200a3d0 0000086c t execute_stack_op
0200ac3c 00000390 t uw_update_context_1
0200afcc 00000950 t execute_cfa_program_specialized
0200b91c 00000988 t execute_cfa_program_generic
0200c2a4 0000051c t uw_frame_state_for
0200c7c0 000002d0 t uw_init_context_1
0200ca90 000001cc t _Unwind_RaiseException_Phase2
0200cc5c 000001f0 t _Unwind_ForcedUnwind_Phase2
0200ce4c 00000068 T _Unwind_SetGR
0200ceb4 00000014 T _Unwind_GetIPInfo
0200cec8 00000008 T _Unwind_SetIP
0200ced0 00000008 T _Unwind_GetLanguageSpecificData
0200ced8 00000008 T _Unwind_GetRegionStart
0200cee0 00000008 T _Unwind_GetDataRelBase
0200cee8 00000008 T _Unwind_GetTextRelBase
0200cef0 00000004 t _Unwind_DebugHook
0200cef4 0000038c T _Unwind_RaiseException
0200d280 000001dc T _Unwind_Resume
0200d45c 00000280 T _Unwind_Resume_or_Rethrow
0200d6dc 0000001c T _Unwind_DeleteException
0200d6f8 00000020 t fde_unencoded_compare
0200d718 00000074 t fde_unencoded_extract
0200d78c 00000110 t frame_downheap
0200d89c 0000000c t init_object_mutex
0200d8a8 0000013c t read_encoded_value_with_base
0200d9e4 000002a0 t fde_radixsort
0200dc84 0000012c t __deregister_frame_info_bases.part.0
0200ddb0 0000014c t get_cie_encoding
0200defc 000000fc t fde_mixed_encoding_extract
0200dff8 0000021c t classify_object_over_fdes.constprop.0
0200e214 00000108 t fde_single_encoding_extract
0200e31c 000000d0 t fde_single_encoding_compare
0200e3ec 00000150 t fde_mixed_encoding_compare
0200e53c 000002b4 t add_fdes.isra.0
0200e7f0 00000308 t linear_search_fdes
0200eaf8 000006ac t search_object
0200f1a4 0000009c T __register_frame_info
0200f240 00000020 T __deregister_frame_info
0200f260 00000260 T _Unwind_Find_FDE
0200f4c0 000001b4 T chdir
0200f674 00000278 T _concatenate_path
0200f8ec 000000e0 T __release_handle
0200f9cc 00000120 T __alloc_handle
0200faec 00000090 T __get_handle
0200fb7c 00000178 T _close_r
0200fcf4 00000008 t null_write
0200fcfc 00000018 T setDefaultDevice
0200fd14 0000014c T FindDevice
0200fe60 00000044 T RemoveDevice
0200fea4 00000118 T AddDevice
0200ffbc 00000014 T __libc_lock_init
0200ffd0 00000014 T __libc_lock_acquire
0200ffe4 00000014 T __libc_lock_release
0200fff8 00000014 T __libc_lock_init_recursive
0201000c 00000104 T strncpy
02010110 0000009c T strcmp
020101ac 00000038 T getenv
020101e4 00000190 T memset
02010374 000000ec T _vsnprintf_r
02010460 00000060 T vsnprintf
020104c0 00000030 T strdup
020104f0 00000154 T strchr
02010644 000023c0 T _svfprintf_r
02012a04 0000014c T memcpy
02012b50 00000210 t _strtoul_l.isra.0
02012d60 00000064 T strtoul
02012dc4 00000030 T close
02012df4 000000c8 T strncmp
02012ebc 00000110 T _wcrtomb_r
02012fcc 000001bc T memmove
02013188 00000040 T calloc
020131c8 00000020 T __errno
020131e8 00000080 T strlen
02013268 0000006c T _strdup_r
020132d4 0000030c t quorem
020135e0 0000163c T _dtoa_r
02014c1c 0000013c T memcmp
02014d58 00000078 T strrchr
02014dd0 00000184 T snprintf
02014f54 0000008c T strcpy
02014fe0 00000058 T malloc
02015038 00000030 T free
02015068 0000010c T _reclaim_reent
02015174 00000144 T _findenv_r
020152b8 00000178 T memchr
02015430 0000010c T __ssprint_r
0201553c 000000c0 T strnlen
020155fc 00000040 T memalign
0201563c 00000090 T frexp
020156cc 00000040 T __env_lock
0201570c 0000000c T __env_unlock
02015718 000000e0 T _Balloc
020157f8 00000024 T _Bfree
0201581c 00000154 T __multadd
02015970 00000098 T __hi0bits
02015a08 0000010c T __lo0bits
02015b14 00000108 T __i2b
02015c1c 00000354 T __multiply
02015f70 000001a4 T __pow5mult
02016114 0000026c T __lshift
02016380 000000dc T __mcmp
0201645c 00000328 T __mdiff
02016784 00000198 T __d2b
0201691c 0000004c T _localeconv_r
02016968 0000004c T __locale_mb_cur_max
020169b4 00000010 T _wcsrtombs_r
020169c4 00000328 T __utf8_mbtowc
02016cec 00000188 T __ssputs_r
02016e74 000001e8 T _wcsnrtombs_l
0201705c 000000d8 T _wcsnrtombs_r
02017134 00000108 T __utf8_wctomb
0201723c 00000390 T __umoddi3
020175cc 00000058 T _restfpr_14_x
020175d0 00000054 T _restfpr_15_x
020175d4 00000050 T _restfpr_16_x
020175d8 0000004c T _restfpr_17_x
020175dc 00000048 T _restfpr_18_x
020175e0 00000044 T _restfpr_19_x
020175e4 00000040 T _restfpr_20_x
020175e8 0000003c T _restfpr_21_x
020175ec 00000038 T _restfpr_22_x
020175f0 00000034 T _restfpr_23_x
020175f4 00000030 T _restfpr_24_x
020175f8 0000002c T _restfpr_25_x
020175fc 00000028 T _restfpr_26_x
02017600 00000024 T _restfpr_27_x
02017604 00000020 T _restfpr_28_x
02017608 0000001c T _restfpr_29_x
0201760c 00000018 T _restfpr_30_x
02017610 00000014 T _restfpr_31_x
02017624 t __do_global_ctors_aux
02017674 T __fini
10000000 00000004 d PRINT_META_OBJECTS
10000018 00000004 d RPX_NAME
10000112 00000001 d std::__detail::__integer_to_chars_is_unsigned<unsigned int>
10000113 00000001 d std::__detail::__integer_to_chars_is_unsigned<unsigned long>
10000114 00000001 d std::__detail::__integer_to_chars_is_unsigned<unsigned long long>
10000115 00000001 d std::__detail::__destructible<std::_Bit_iterator>
10000116 00000001 d std::__detail::__destructible_impl<std::_Bit_iterator>
10000117 00000001 d std::__detail::__destructible<std::_Bit_const_iterator>
10000118 00000001 d std::__detail::__destructible_impl<std::_Bit_const_iterator>
10000119 00000001 d std::__is_ratio_v<std::ratio<1ll, 1000ll> >
1000011a 00000001 d std::__is_ratio_v<std::ratio<1000000000ll, 1ll> >
1000011b 00000001 d std::__is_ratio_v<std::ratio<1ll, 1000000ll> >
1000011c 00000001 d std::__is_ratio_v<std::ratio<1ll, 1000000000ll> >
1000011d 00000001 d std::__is_ratio_v<std::ratio<1ll, 1ll> >
1000011e 00000001 d std::__is_ratio_v<std::ratio<1000ll, 1ll> >
10000784 d .LC2
10000860 00000080 d __wut_fsa_devoptab
100008e0 00000042 d CSWTCH.24
10000924 00000034 d __wut_nsysnet_error_code_map
1000098c 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
100009b4 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
100009c0 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
100009ec 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
100009f8 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
10000a0c 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
10000a20 00000025 V typeinfo name for __cxxabiv1::__si_class_type_info
10000a48 0000000c V typeinfo for __cxxabiv1::__si_class_type_info
10000a54 0000002c V vtable for __cxxabiv1::__si_class_type_info
10000a80 0000000d V typeinfo name for std::type_info
10000a90 0000000d V typeinfo name for std::bad_alloc
10000aa0 0000000c V typeinfo for std::bad_alloc
10000aac 00000014 V vtable for std::bad_alloc
10000ac0 00000019 V typeinfo name for std::bad_array_new_length
10000adc 0000000c V typeinfo for std::bad_array_new_length
10000ae8 00000014 V vtable for std::bad_array_new_length
10000afc 00000022 V typeinfo name for __cxxabiv1::__class_type_info
10000b20 0000000c V typeinfo for __cxxabiv1::__class_type_info
10000b2c 0000002c V vtable for __cxxabiv1::__class_type_info
10000b58 0000000d V typeinfo name for std::exception
10000b68 00000012 V typeinfo name for std::bad_exception
10000b7c 0000000c V typeinfo for std::bad_exception
10000b88 00000020 V typeinfo name for __cxxabiv1::__forced_unwind
10000ba8 00000024 V typeinfo name for __cxxabiv1::__foreign_exception
10000bcc 00000014 V vtable for std::bad_exception
10000be0 00000010 V typeinfo name for std::logic_error
10000bf0 0000000c V typeinfo for std::logic_error
10000bfc 00000011 V typeinfo name for std::length_error
10000c10 0000000c V typeinfo for std::length_error
10000c1c 00000014 V vtable for std::logic_error
10000c30 00000014 V vtable for std::length_error
10001128 00000008 d terminator.0
10001130 00000080 D dotab_stdnull
10001358 00000010 d zeroes.0
10001368 00000010 d blanks.1
100013c8 00000101 D _ctype_
100014cc 0000000c d p05.0
100014d8 00000028 D __mprec_bigtens
10001500 000000c8 D __mprec_tens
100016f4 d __CTOR_LIST__
100016f8 D __CTOR_LIST__
10001700 d __CTOR_END__
10001700 D __CTOR_END__
10001704 d __DTOR_LIST__
10001708 D __DTOR_LIST__
10001710 D __DTOR_END__
10001714 d __EH_FRAME_BEGIN__
10001714 D __EH_FRAME_BEGIN__
100065e4 D __EH_FRAME_END__
100065e4 d __FRAME_END__
100065e8 00000004 D real_VPADRead
100065ec 00000004 d sConfigPluginIdentifier
100065f0 00000004 d sConfigAPIVersion
100065f4 00000028 d __internal_functions
1000661c 00000004 d sSocket
10006620 00000080 d __wut_socket_devoptab
100066a0 00000400 d _current_working_directory
10006aa0 00001000 d handles
10007aa0 0000000c d __stderr_handle
10007aac 0000000c d __stdout_handle
10007ab8 0000000c d __stdin_handle
10007ac4 0000008c D devoptab_list
10007b50 00000004 d defaultDevice
10007b58 00000120 D _impure_data
10007c78 0000016c D __global_locale
10007de4 00000004 D __cxxabiv1::__unexpected_handler
10007de8 00000008 V typeinfo for std::type_info
10007df0 00000008 V typeinfo for std::exception
10007df8 00000008 V typeinfo for __cxxabiv1::__forced_unwind
10007e00 00000008 V typeinfo for __cxxabiv1::__foreign_exception
10007e08 00000004 D __cxxabiv1::__terminate_handler
10007e0c 00000004 D _impure_ptr
10007e10 00000004 D environ
10007e18 00000004 B moduleLogInit
10007e1c 00000004 B cafeLogInit
10007e20 00000004 B udpLogInit
10007e24 00000004 B __wut_exit
10007e28 00000001 B __eh_globals_init::_S_init
10007e29 b completed.2
10007e2c b dtor_idx.1
10007e30 b object.0
10007e48 00000001 b sConfigLibInitDone
10007e4c 00000004 b sAPIItemDestroy
10007e50 00000004 b sAPIItemCreateEx
10007e54 00000004 b sAPICategoryAddItem
10007e58 00000004 b sAPICategoryAddCategory
10007e5c 00000004 b sAPICategoryDestroy
10007e60 00000004 b sAPICategoryCreateEx
10007e64 00000004 b sAPIInitEx
10007e68 00000004 b sAPIGetVersion
10007e6c 00000004 b sModuleHandle
10007e70 00000004 b __wut_socket_devoptab_added
10007e74 00000004 b sHeapSize
10007e78 00000004 b sHeapMaxSize
10007e7c 00000004 b sHeapBase
10007e80 00000004 b sHeapHandle
10007e84 00000040 b sHandlers
10007ec4 00000004 b sWUMSLogWrite
10007ec8 00000004 b sModuleHandle
10007ecc 00000010 b sSendAddr
10007edc 0000002c b key_mutex
10007f08 00000400 b key_table
10008308 000003b8 B __wut_fsa_device_data
100086c0 00000004 b sLibcLockUsedMask
100086c4 000002c0 b sLibcLocks
10008984 00000038 b (anonymous namespace)::emergency_pool
100089bc 00000004 b init
100089c0 00000008 b (anonymous namespace)::eh_globals
100089c8 00000004 b (anonymous namespace)::__new_handler
100089cc 00000010 V std::string::_Rep::_S_empty_rep_storage
100089dc 00000004 b once_regsizes.0
100089e0 00000070 b dwarf_reg_size_table
10008a50 00000004 b once.1
10008a54 0000002c b object_mutex
10008a80 00000004 b seen_objects
10008a84 00000004 b unseen_objects
10008a88 00000400 b temp_cwd
10008e88 00000004 b __hndl_lock
10008e90 00000150 B __sf
10008fe0 00000004 b __env_recursive_mutex
10008fe4 00000004 b initial_env
10008fe8 0000001d R wups_meta_name
10009008 0000000b R wups_meta_wups
10009014 00000024 R wups_meta_buildtimestamp
10009038 00000018 R wups_meta_plugin_name
10009050 0000004d R wups_meta_info_dump
100090a0 0000009d R wups_meta_info_linking_order
10009140 00000052 R wups_meta_description
10009194 0000000d R wups_meta_version
100091a4 00000016 R wups_meta_author
100091bc 0000000e R wups_meta_license
100091cc 00000024 R wups_meta_storage_id
100091f0 00000024 R wups_load_my_VPADRead
10009214 00000008 R wups_hooks_on_init_wut_malloc
1000921c 00000008 R wups_hooks_on_fini_wut_malloc
10009224 00000008 R wups_hooks_on_init_wut_sockets
1000922c 00000008 R wups_hooks_on_fini_wut_sockets
10009234 00000008 R wups_hooks_on_init_wut_newlib
1000923c 00000008 R wups_hooks_on_fini_wut_newlib
10009244 00000008 R wups_hooks_on_init_wut_stdcpp
1000924c 00000008 R wups_hooks_on_fini_wut_stdcpp
10009254 00000008 R wups_hooks___init_wrapper
1000925c 00000008 R wups_hooks___fini_wrapper
10009264 00000008 R wups_hooks_wups_init_config_functions
1000926c 00000008 R wups_hooks_on_init_wut_devoptab
10009274 00000008 R wups_hooks_on_fini_wut_devoptab
1000927c 00000008 R wups_hooks_init_storage
10009284 00000008 R wups_hooks_init_plugin
1000928c 00000008 R wups_hooks_deinit_plugin
10009294 00000008 R wups_hooks_on_app_starting
1000929c 00000008 R wups_hooks_on_app_ending
100092a4 00000008 R wups_hooks_on_app_requests_exit
c0000038 T FSAAddClient
c0000040 T FSAChangeDir
c0000048 T FSAChangeMode
c0000050 T FSACloseDir
c0000058 T FSACloseFile
c0000060 T FSADelClient
c0000068 T FSAFlushFile
c0000070 T FSAGetDeviceInfo
c0000078 T FSAGetFreeSpaceSize
c0000080 T FSAGetStat
c0000088 T FSAGetStatFile
c0000090 T FSAInit
c0000098 T FSAMakeDir
c00000a0 T FSAMount
c00000a8 T FSAOpenDir
c00000b0 T FSAOpenFileEx
c00000b8 T FSAReadDir
c00000c0 T FSAReadFile
c00000c8 T FSARemove
c00000d0 T FSARename
c00000d8 T FSARewindDir
c00000e0 T FSASetPosFile
c00000e8 T FSATruncateFile
c00000f0 T FSAUnmount
c00000f8 T FSAWriteFile
c0000100 T MEMFreeToExpHeap
c0000108 T MEMGetSizeForMBlockExpHeap
c0000110 T OSCompareAndSwapAtomic
c0000118 T OSCompareAndSwapAtomicEx
c0000120 T OSDynLoad_Acquire
c0000128 T OSDynLoad_FindExport
c0000130 T OSDynLoad_GetNumberOfRPLs
c0000138 T OSDynLoad_GetRPLInfo
c0000140 T OSFatal
c0000148 T OSGetCurrentThread
c0000150 T OSInitMutex
c0000158 T OSInitMutexEx
c0000160 T OSLockMutex
c0000168 T OSReport
c0000170 T OSSetThreadCleanupCallback
c0000178 T OSSwapAtomic
c0000180 T OSUnlockMutex
c0000188 T __rplwrap_exit
c00001b0 T htonl
c00001b8 T htons
c00001c0 T socket_lib_init
c00001c8 T __rplwrap_recv
c00001d0 T __rplwrap_send
c00001d8 T __rplwrap_sendto
c00001e0 T __rplwrap_setsockopt
c00001e8 T __rplwrap_shutdown
c00001f0 T __rplwrap_socket
c00001f8 T __rplwrap_socketclose
c0000200 T __rplwrap_socketlasterr
c0000220 T VPADGetButtonProcMode
c0000248 R MEMAllocFromDefaultHeapEx
c0000250 R MEMFreeToDefaultHeap
